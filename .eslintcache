[{"/Users/dee/Desktop/spotify-v1/src/reportWebVitals.js":"1","/Users/dee/Desktop/spotify-v1/src/App.js":"2","/Users/dee/Desktop/spotify-v1/src/auth.js":"3","/Users/dee/Desktop/spotify-v1/src/Player.js":"4","/Users/dee/Desktop/spotify-v1/src/index.js":"5","/Users/dee/Desktop/spotify-v1/src/DarkMode.js":"6","/Users/dee/Desktop/spotify-v1/src/ProgressBar.js":"7","/Users/dee/Desktop/spotify-v1/src/ButtonToggle.js":"8","/Users/dee/Desktop/spotify-v1/src/MediaControls.js":"9","/Users/dee/Desktop/spotify-v1/src/SongInfo.js":"10","/Users/dee/Desktop/spotify-v1/src/Login.js":"11"},{"size":362,"mtime":1609573561461,"results":"12","hashOfConfig":"13"},{"size":6056,"mtime":1609849971613,"results":"14","hashOfConfig":"13"},{"size":475,"mtime":1609863045354,"results":"15","hashOfConfig":"13"},{"size":807,"mtime":1609773444150,"results":"16","hashOfConfig":"13"},{"size":500,"mtime":1609573561460,"results":"17","hashOfConfig":"13"},{"size":1455,"mtime":1609860732024,"results":"18","hashOfConfig":"13"},{"size":647,"mtime":1609776326099,"results":"19","hashOfConfig":"13"},{"size":449,"mtime":1609753879947,"results":"20","hashOfConfig":"13"},{"size":2886,"mtime":1609774660455,"results":"21","hashOfConfig":"13"},{"size":1865,"mtime":1609776531102,"results":"22","hashOfConfig":"13"},{"size":2331,"mtime":1609863198696,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1unur9c",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dee/Desktop/spotify-v1/src/reportWebVitals.js",[],"/Users/dee/Desktop/spotify-v1/src/App.js",["48"],"import logo from './logo.svg';\nimport './App.css';\n\nimport React from 'react';\nimport * as $ from 'jquery';\n\nimport {auth_URL} from './auth';\n\nimport Player from './Player';\nimport MediaControls from './MediaControls';\nimport DarkModeToggle from './DarkMode';\nimport Login from './Login';\nimport SongInfo from './SongInfo';\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            token: null,\n            no_data: false,\n            is_playing: false,\n            item: {\n                album: {\n                    images: [{ url: ''}],\n                    external_urls: {},\n                    name: '',\n                },\n                artists: [{\n                    name: '',\n                    external_urls: {},\n                }],\n                name: '',\n                popularity: 0,\n                duration_ms: 0,\n                external_urls: {},\n            },\n            progress_ms: 0,\n            device: {},\n        };\n\n        /*\n        this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n        this.update = this.update.bind(this);\n        this.pauseCurrentlyPlaying = this.pauseCurrentlyPlaying.bind(this);\n        */\n    }\n\n    componentDidMount() {\n        /* preprocess window, will have access token if from spotify response */\n        let response = window.location.hash\n            .substring(1)\n            .split('&')\n            .reduce( (sum, next) => {\n                if (next) {\n                    let parts = next.split('=');\n                    sum[parts[0]] = decodeURIComponent(parts[1]);\n                }\n                return sum;\n            }, {});\n        window.location.hash = '';\n\n        let _token = response.access_token\n        if (_token) {\n            this.setState({\n                token: _token,\n            });\n\n            /* call API */\n            this.getCurrentlyPlaying(_token);\n        }\n\n        /* call API again every X milliseconds */\n        this.interval = setInterval(() => this.update(), 1000);\n    }\n\n    /* clear interval when component unmounts */\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    /* keep calling API */\n    update() {\n        if (this.state.token) {\n            this.getCurrentlyPlaying(this.state.token);\n        }\n    }\n\n    getCurrentlyPlaying(token) {\n        /* async API call */\n        $.ajax({\n            url: 'https://api.spotify.com/v1/me/player',\n            method: 'GET',\n            headers: {\n                'Authorization': 'Bearer ' + token\n            },\n\n            success: (data) => {\n                /* check if no response */\n                if (!data) {\n                    this.setState({\n                        no_data: true,\n                    });\n                    return;\n                }\n                \n                /* if response, update state */\n                this.setState({\n                    no_data: false,\n                    is_playing: data.is_playing,\n                    progress_ms: data.progress_ms,\n                    item: data.item,\n                    device: data.device,\n                });\n            }\n        });\n    }\n\n    pauseCurrentlyPlaying(token) {\n        $.ajax({\n            url: 'https://api.spotify.com/v1/me/player/pause',\n            method: 'PUT',\n            headers: {\n                'Authorization': 'Bearer ' + token\n            },\n            /* no response for PUT */\n        })\n    }\n\n    resumeCurrentlyPlaying(token) {\n        $.ajax({\n            url: 'https://api.spotify.com/v1/me/player/play',\n            method: 'PUT',\n            headers: {\n                'Authorization': 'Bearer ' + token\n            },\n            /* no response for PUT */\n        })\n    }\n\n    getNextSong(token) {\n        $.ajax({\n            url: 'https://api.spotify.com/v1/me/player/next',\n            method: 'POST',\n            headers: {\n                'Authorization': 'Bearer ' + token\n            },\n            /* no response for POST */\n        })\n    }\n\n    getPrevSong(token) {\n        $.ajax({\n            url: 'https://api.spotify.com/v1/me/player/previous',\n            method: 'POST',\n            headers: {\n                'Authorization': 'Bearer ' + token\n            },\n            /* no response for POST */\n        })\n    }\n\n    render() {\n        return (\n            <div className='App'>\n                {/* If no token, get*/}\n                {!this.state.token && (\n                    <header className='App-header'>\n                        <Login\n                        auth_URL={auth_URL}\n                        />\n                        <DarkModeToggle />\n                    </header>\n                )}\n                {this.state.token && !this.state.no_data && (\n                    <header className='App-header'>\n                        <div className='song-area'>\n                            <SongInfo\n                            is_playing={this.state.is_playing}\n                            item={this.state.item}\n                            />\n                            <Player\n                            is_playing={this.state.is_playing}\n                            progress_ms={this.state.progress_ms}\n                            item={this.state.item}\n                            device={this.state.device}\n                            />\n                        </div>\n                        <MediaControls\n                        is_playing={this.state.is_playing}\n                        token={this.state.token}\n                        />\n                        <DarkModeToggle />\n                    </header>\n                )}\n                {this.state.no_data && (\n                    <header className='App-header'>\n                        <div className='no-music-text'>\n                            Songs you play will appear here.\n                        </div>\n                        <DarkModeToggle />\n                    </header>\n                )}\n            </div>\n        );\n    }\n}\n\n\nexport default App;\n","/Users/dee/Desktop/spotify-v1/src/auth.js",[],"/Users/dee/Desktop/spotify-v1/src/Player.js",[],"/Users/dee/Desktop/spotify-v1/src/index.js",[],"/Users/dee/Desktop/spotify-v1/src/DarkMode.js",["49","50","51","52","53","54","55","56","57","58"],"import useDarkMode from 'use-dark-mode';\nimport ButtonToggle from './ButtonToggle'\nimport './DarkMode.css';\n\n\nconst DarkModeToggle = (props) => {\n    /* manually add each HTML element */\n    const darkMode = useDarkMode(true);\n    const darkMode0 = useDarkMode(true, {element: document.getElementsByClassName('btn-login')[0]});\n    const darkMode1 = useDarkMode(true, {element: document.getElementsByClassName('song-image')[0]});\n    const darkMode2 = useDarkMode(true, {element: document.getElementsByClassName('btn-prev')[0]});\n    const darkMode3 = useDarkMode(true, {element: document.getElementsByClassName('btn-pause')[0]});\n    const darkMode4 = useDarkMode(true, {element: document.getElementsByClassName('btn-play')[0]});\n    const darkMode5 = useDarkMode(true, {element: document.getElementsByClassName('btn-next')[0]});\n    const darkMode6 = useDarkMode(true, {element: document.getElementsByClassName('no-music-text')[0]});\n    const darkMode7 = useDarkMode(true, {element: document.getElementsByClassName('song-title-link')[0]});\n    const darkMode8 = useDarkMode(true, {element: document.getElementsByClassName('song-artist-link')[0]});\n    const darkMode9 = useDarkMode(true, {element: document.getElementsByClassName('progress-in')[0],});\n\n    return (\n        <div>\n            <ButtonToggle\n            checked={darkMode.value}\n            onChange={darkMode.toggle}\n            />\n        </div>\n    );\n}\n\nexport default DarkModeToggle;","/Users/dee/Desktop/spotify-v1/src/ProgressBar.js",[],"/Users/dee/Desktop/spotify-v1/src/ButtonToggle.js",[],"/Users/dee/Desktop/spotify-v1/src/MediaControls.js",["59"],"/Users/dee/Desktop/spotify-v1/src/SongInfo.js",[],"/Users/dee/Desktop/spotify-v1/src/Login.js",[],{"ruleId":"60","severity":1,"message":"61","line":1,"column":8,"nodeType":"62","messageId":"63","endLine":1,"endColumn":12},{"ruleId":"60","severity":1,"message":"64","line":9,"column":11,"nodeType":"62","messageId":"63","endLine":9,"endColumn":20},{"ruleId":"60","severity":1,"message":"65","line":10,"column":11,"nodeType":"62","messageId":"63","endLine":10,"endColumn":20},{"ruleId":"60","severity":1,"message":"66","line":11,"column":11,"nodeType":"62","messageId":"63","endLine":11,"endColumn":20},{"ruleId":"60","severity":1,"message":"67","line":12,"column":11,"nodeType":"62","messageId":"63","endLine":12,"endColumn":20},{"ruleId":"60","severity":1,"message":"68","line":13,"column":11,"nodeType":"62","messageId":"63","endLine":13,"endColumn":20},{"ruleId":"60","severity":1,"message":"69","line":14,"column":11,"nodeType":"62","messageId":"63","endLine":14,"endColumn":20},{"ruleId":"60","severity":1,"message":"70","line":15,"column":11,"nodeType":"62","messageId":"63","endLine":15,"endColumn":20},{"ruleId":"60","severity":1,"message":"71","line":16,"column":11,"nodeType":"62","messageId":"63","endLine":16,"endColumn":20},{"ruleId":"60","severity":1,"message":"72","line":17,"column":11,"nodeType":"62","messageId":"63","endLine":17,"endColumn":20},{"ruleId":"60","severity":1,"message":"73","line":18,"column":11,"nodeType":"62","messageId":"63","endLine":18,"endColumn":20},{"ruleId":"74","severity":1,"message":"75","line":6,"column":5,"nodeType":"76","messageId":"77","endLine":8,"endColumn":6},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'darkMode0' is assigned a value but never used.","'darkMode1' is assigned a value but never used.","'darkMode2' is assigned a value but never used.","'darkMode3' is assigned a value but never used.","'darkMode4' is assigned a value but never used.","'darkMode5' is assigned a value but never used.","'darkMode6' is assigned a value but never used.","'darkMode7' is assigned a value but never used.","'darkMode8' is assigned a value but never used.","'darkMode9' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor"]